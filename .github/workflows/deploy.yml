name: Deploy to Heroku

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: cd prompt-engine && npm ci
      - name: Build backend
        run: cd prompt-engine && npm run build
      - name: Run tests
        run: cd prompt-engine && npm run test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          export PATH="/usr/local/bin:$PATH"
          echo "/usr/local/bin" >> $GITHUB_PATH
          /usr/local/bin/heroku --version
      - name: Login to Heroku
        run: |
          export HEROKU_API_KEY="${{ secrets.HEROKU_API_KEY }}"
          heroku auth:whoami
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Deploy to Heroku
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          echo "machine git.heroku.com login _ password ${{ secrets.HEROKU_API_KEY }}" > ~/.netrc
          chmod 600 ~/.netrc
          if ! git remote | grep -q heroku; then
            heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}
          fi
          # Set the buildpack to Node.js (only if not already set)
          if ! heroku buildpacks -a ${{ secrets.HEROKU_APP_NAME }} | grep -q "heroku/nodejs"; then
            heroku buildpacks:set heroku/nodejs -a ${{ secrets.HEROKU_APP_NAME }}
          else
            echo "Node.js buildpack already configured"
          fi
          git push heroku HEAD:main --force
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Health check
        if: success()
        run: |
          sleep 30
          curl -f https://eprompt-be-4e52843fa931.herokuapp.com/health || exit 1
          echo "âœ… Deployment successful! Health check passed"
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
